/**
 * SettingsScreen Component
 *
 * Displays user settings and navigation options for the ELTR app.
 * Includes account access, child mode, about, FAQ, and logout functionality.
 *
 * Key Features:
 * - FlatList of menu items with icons and navigation targets
 * - Sponsor image and app version info at the bottom
 * - Custom styling and layout for clarity and accessibility
 * 
 * 🔐 Firebase Integration:
 * - Uses `Firebase.auth().signOut()` to log out the user
 * - Updates global AuthContext on successful sign-out
 *
 * Generated by Copilot AI
 */

import React, { useContext } from "react";
import { StyleSheet, View, FlatList, Text, Image, Dimensions } from "react-native";

import Screen from "../components/Screen";
import ListItem from "../components/lists/ListItem";
import Icon from "../components/Icon";
import colors from "../config/colors";
import ListItemSeparator from "../components/lists/ListItemSeparator";
import routes from "../navigation/routes";
import AuthContext from "../auth/context";
import Firebase from "../config/firebase";

const windowWidth = Dimensions.get('window').width;

const menuItems = [
  {
    title: "Account",
	icon: {
		name: "account",
		backgroundColor: colors.primary,
	},
	target: "AccountDetails",
  },
  {
	title: "Child Mode",
	icon: {
		name: "account-supervisor",
		backgroundColor: colors.secondary,
	},
	target: "ChildAlert",
  },
  {
	title: "About",
	icon: {
		name: "information-outline",
		backgroundColor: colors.eltrgreen,
	},
	target: "AboutScreen",
  },
  {
	title: "FAQ",
	icon: {
		name: "chat-question",
		backgroundColor: colors.eltrpink,
	},
	target: "HelpScreen",
  },
  {
	title: "Log Out",
	icon: {
		name: "logout",
		backgroundColor: colors.eltryellow,
	},
	isLogout: true,
  },
];

// logout function does not work currently
function SettingsScreen( { navigation } ) {
  const authContext = useContext(AuthContext);

  const handleLogOut = () => {
    Firebase.auth()
      .signOut()
      .then(() => {
        // Sign-out successful.
        authContext.setUser(null);
      })
      .catch((error) => {
        console.log(error);
      });
  };

  return (
    <Screen style={styles.screen}>
      <View style={styles.container}>
        <FlatList
          data={menuItems}
          keyExtractor={(item) => item.title}
          ItemSeparatorComponent={ListItemSeparator}
          renderItem={({ item }) => (
                <View style={item.isLogout ? styles.logoutContainer : null}>
					<ListItem
						title={item.title}
						onPress={
						item.isLogout
							? handleLogOut
							: () => navigation.navigate(item.target)
						}
						IconComponent={
						<Icon
							name={item.icon.name}
							backgroundColor={item.icon.backgroundColor}
						/>
						}
					/>
				</View>
          	)}
			scrollEnabled={false} // needed to prevent list of options from scrolling
        />
      </View>
		<Text style={styles.sponsor}>
			Sponsored by
		</Text>
			{/* replace this assets png to change the sponsor image in the settings tab */}
		<Image
			style={styles.pic}
			source={require("../assets/appsponsor.png")}
		/>
		<Text style={styles.bot}>
			Eat Like The Rainbow App 2025  |  Version 1.0.6
		</Text>
	</Screen>
  );
}

const styles = StyleSheet.create({
	container: {
		marginVertical: 1,
	},
	screen: {
		backgroundColor: colors.light,
		paddingTop: 8,
	},
	sponsor: {
		fontSize: 23,
		fontWeight: "bold",
		marginTop: 15,
		marginBottom: 10,
		alignSelf: "center",
	},
	bot: {
		fontSize: 15,
		marginTop: 10,
		marginbottom: 0,
		alignSelf: "center",
	},
	pic: {
		alignSelf: "center",
		width: 350,
		height: 150,
		resizeMode: 'contain',
	},
	logoutContainer: {
  		marginTop: 10, // adjust this number to increase/decrease spacing
	},
});

export default SettingsScreen;
