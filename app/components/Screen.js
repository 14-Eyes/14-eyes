/**
 * This component defines a reusable `Screen` wrapper for consistent layout and keyboard handling across the app.
 * 
 * Features:
 * - Uses `KeyboardAvoidingView` to prevent the keyboard from overlapping input fields
 * - Adjusts behavior based on platform (`padding` for iOS, `height` for Android)
 * - Applies top padding equal to the device's status bar height using Expo's `Constants`
 * - Wraps children inside a styled `View` and includes a flexible spacer to push content upward
 * 
 * Props:
 * - `children`: the content to render inside the screen
 * - `style`: optional custom styles to override or extend default layout
 * 
 * This component helps maintain a clean, responsive layout while managing keyboard interactions gracefully.
 * 
 * Generated by CoPilot AI
 */

import React from "react";
import {Platform} from 'react-native';
import Constants from "expo-constants";
import {
  KeyboardAvoidingView,
  StyleSheet,
  View,
} from "react-native";
import { SafeAreaView } from 'react-native-safe-area-context';


function Screen({ children, style }) {
  return (
    <KeyboardAvoidingView
      behavior={Platform.OS === "ios" ? "padding" : "height"}
      style={[styles.screen, style]}
    >
      <View style={[styles.view, style]}>{children}</View>
      <View style={{ flex: 1 }} />
    </KeyboardAvoidingView>
  );
}

const styles = StyleSheet.create({
  screen: {
    paddingTop: Constants.statusBarHeight,
    flex: 1,
  },
  view: {
    justifyContent: "flex-end",
  },
});

export default Screen;


// FOLLOWING SECTION IS NEW CODE
/*  I was trying to test out the new SafeAreaView package and
    see if I could standardize the formatting accross all screens.
    The formatting was getting a bit wonky and this is out of scope 
    for my tasks right now but I want to come back to this...
*/

/*
import React from "react";
import { Platform, KeyboardAvoidingView, StyleSheet, View } from 'react-native';
import Constants from "expo-constants";
import { SafeAreaView } from "react-native-safe-area-context";

function Screen({ children, style }) {
  return (
    <SafeAreaView
      style={[styles.safeArea]}
      edges={["top", "left", "right"]} // ensures full device coverage (minus bottom)
    >
      <KeyboardAvoidingView
        behavior={Platform.OS === "ios" ? "padding" : "height"}
        style={[styles.screen, style]}
      >
        <View style={[styles.view, style]}>{children}</View>
        <View style={{ flex: 1 }} />
      </KeyboardAvoidingView>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  safeArea: {
    flex: 1,
    backgroundColor: "#af2a2aff",
  },
  screen: {
    flex: 1,
    paddingTop: Platform.OS === "android" ? Constants.statusBarHeight : 0,
  },
  view: {
    // flex: 1,
    justifyContent: "flex-end",
  },
});

export default Screen; 
*/
