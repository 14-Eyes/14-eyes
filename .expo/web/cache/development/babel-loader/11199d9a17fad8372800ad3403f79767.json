{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _FlatList = _interopRequireDefault(require(\"react-native-web/dist/exports/FlatList\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _AppPicker = _interopRequireDefault(require(\"../components/AppPicker\"));\n\nvar _AppText = _interopRequireDefault(require(\"../components/AppText\"));\n\nvar _index = require(\"../components/lists/index\");\n\nvar _Screen = _interopRequireDefault(require(\"../components/Screen\"));\n\nvar _colors = _interopRequireDefault(require(\"../config/colors\"));\n\nvar _options = _interopRequireDefault(require(\"../config/options\"));\n\nvar _sstore = _interopRequireDefault(require(\"../utility/sstore\"));\n\nvar _context2 = _interopRequireDefault(require(\"../auth/context\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mason\\\\ELTRFront\\\\app\\\\screens\\\\AccountConditions.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar initialItems = [];\nvar conditionChoices = _options.default.conditionChoices;\n\nfunction AccountConditions(props) {\n  var _this = this;\n\n  var authContext = (0, _react.useContext)(_context2.default);\n  var key = authContext.user.uid + \"conditions\";\n\n  var _useState = (0, _react.useState)(initialItems),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      conditions = _useState2[0],\n      setConditions = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    loadConditions();\n  }, []);\n\n  var loadConditions = function loadConditions() {\n    var response;\n    return _regenerator.default.async(function loadConditions$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(_sstore.default.get(key));\n\n          case 2:\n            response = _context.sent;\n            setConditions(response);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleDelete = function handleDelete(condition) {\n    var updated = conditions.filter(function (m) {\n      return m.id !== condition.id;\n    });\n    setConditions(updated);\n\n    _sstore.default.store(key, updated);\n  };\n\n  var onSelectItem = function onSelectItem(condition) {\n    if (conditions.includes(condition)) {\n      setConditions(conditions);\n    } else {\n      var updated = JSON.parse(JSON.stringify(conditions));\n      updated.push(condition);\n      setConditions(updated);\n\n      _sstore.default.store(key, updated);\n    }\n  };\n\n  return _react.default.createElement(_Screen.default, {\n    style: styles.screen,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_View.default, {\n    style: styles.toolTip,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_AppText.default, {\n    style: styles.toolTipText,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Swipe left to remove!\")), _react.default.createElement(_AppPicker.default, {\n    placeholder: \"Add Condition\",\n    items: conditionChoices,\n    onSelectItem: onSelectItem,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_FlatList.default, {\n    data: conditions,\n    keyExtractor: function keyExtractor(condition) {\n      return condition.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return _react.default.createElement(_index.ListItem, {\n        title: item.label,\n        subTitle: item.description,\n        image: item.image,\n        onPress: function onPress() {\n          return console.log(\"Message Selected\", item);\n        },\n        renderRightActions: function renderRightActions() {\n          return _react.default.createElement(_index.ListItemDeleteAction, {\n            onPress: function onPress() {\n              return handleDelete(item);\n            },\n            __self: _this,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }\n          });\n        },\n        __self: _this,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      });\n    },\n    ItemSeparatorComponent: _index.ListItemSeparator,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    marginVertical: 20\n  },\n  toolTip: {\n    alignItems: \"center\"\n  },\n  toolTipText: {\n    color: _colors.default.primary\n  },\n  screen: {\n    backgroundColor: _colors.default.light\n  }\n});\n\nvar _default = AccountConditions;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Mason/ELTRFront/app/screens/AccountConditions.js"],"names":["initialItems","conditionChoices","choices","AccountConditions","props","authContext","AuthContext","key","user","uid","conditions","setConditions","loadConditions","sstore","get","response","handleDelete","condition","updated","filter","m","id","store","onSelectItem","includes","JSON","parse","stringify","push","styles","screen","toolTip","toolTipText","toString","item","label","description","image","console","log","ListItemSeparator","StyleSheet","create","container","marginVertical","alignItems","color","colors","primary","backgroundColor","light"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { FlatList, StyleSheet, View } from \"react-native\";\r\n\r\nimport AppPicker from \"../components/AppPicker\";\r\nimport AppText from \"../components/AppText\";\r\nimport {\r\n  ListItem,\r\n  ListItemDeleteAction,\r\n  ListItemSeparator,\r\n} from \"../components/lists/index\";\r\nimport Screen from \"../components/Screen\";\r\nimport colors from \"../config/colors\";\r\nimport choices from \"../config/options\";\r\nimport sstore from \"../utility/sstore\";\r\nimport AuthContext from \"../auth/context\";\r\n\r\nlet initialItems = [];\r\n\r\nconst conditionChoices = choices.conditionChoices;\r\n\r\nfunction AccountConditions(props) {\r\n  const authContext = useContext(AuthContext);\r\n  const key = authContext.user.uid + \"conditions\"; //use user id to create unique id for async storage\r\n  const [conditions, setConditions] = useState(initialItems);\r\n\r\n  /* use effect runs only once each time page is rendered */\r\n  useEffect(() => {\r\n    loadConditions();\r\n  }, []);\r\n\r\n  const loadConditions = async () => {\r\n    const response = await sstore.get(key);\r\n    setConditions(response);\r\n  };\r\n\r\n  const handleDelete = (condition) => {\r\n    // Delete the item from item\r\n    const updated = conditions.filter((m) => m.id !== condition.id);\r\n    setConditions(updated);\r\n    sstore.store(key, updated);\r\n  };\r\n\r\n  const onSelectItem = (condition) => {\r\n    if (conditions.includes(condition)) {\r\n      setConditions(conditions);\r\n    } else {\r\n      const updated = JSON.parse(JSON.stringify(conditions));\r\n      updated.push(condition);\r\n      //console.log(updated);\r\n      setConditions(updated);\r\n      sstore.store(key, updated);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Screen style={styles.screen}>\r\n      <View style={styles.toolTip}>\r\n        <AppText style={styles.toolTipText}>Swipe left to remove!</AppText>\r\n      </View>\r\n      <AppPicker\r\n        placeholder=\"Add Condition\"\r\n        items={conditionChoices}\r\n        onSelectItem={onSelectItem}\r\n      />\r\n      <FlatList\r\n        data={conditions}\r\n        keyExtractor={(condition) => condition.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <ListItem\r\n            title={item.label}\r\n            subTitle={item.description}\r\n            image={item.image}\r\n            onPress={() => console.log(\"Message Selected\", item)}\r\n            renderRightActions={() => (\r\n              <ListItemDeleteAction onPress={() => handleDelete(item)} />\r\n            )}\r\n          />\r\n        )}\r\n        ItemSeparatorComponent={ListItemSeparator}\r\n      />\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginVertical: 20,\r\n  },\r\n  toolTip: {\r\n    alignItems: \"center\",\r\n  },\r\n  toolTipText: {\r\n    color: colors.primary,\r\n  },\r\n  screen: {\r\n    backgroundColor: colors.light,\r\n  },\r\n});\r\nexport default AccountConditions;\r\n"]},"metadata":{},"sourceType":"script"}