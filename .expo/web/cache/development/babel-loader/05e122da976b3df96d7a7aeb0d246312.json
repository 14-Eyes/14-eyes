{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar Yup = _interopRequireWildcard(require(\"yup\"));\n\nvar _firebase = _interopRequireDefault(require(\"firebase\"));\n\nvar _Screen = _interopRequireDefault(require(\"../components/Screen\"));\n\nvar _forms = require(\"../components/forms\");\n\nvar _AppText = _interopRequireDefault(require(\"../components/AppText\"));\n\nvar _context = _interopRequireDefault(require(\"../auth/context\"));\n\nvar _firebase2 = _interopRequireDefault(require(\"../config/firebase\"));\n\nvar _ErrorMessage = _interopRequireDefault(require(\"../components/forms/ErrorMessage\"));\n\nvar _colors = _interopRequireDefault(require(\"../config/colors\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mason\\\\ELTRFront\\\\app\\\\screens\\\\EditAccountPassword.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar validationSchema = Yup.object().shape({\n  email: Yup.string().required().email().label(\"Email\"),\n  password: Yup.string().required().min(6).label(\"Password\"),\n  newPassword: Yup.string().required().min(6).label(\"Password\"),\n  confirmNewPassword: Yup.string().required().label(\"Confirm Password\").oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match.\")\n});\n\nfunction EditAccountPassword(_ref) {\n  var navigation = _ref.navigation;\n  var authContext = (0, _react.useContext)(_context.default);\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      loginFailed = _useState2[0],\n      setLoginFailed = _useState2[1];\n\n  var handleSubmit = function handleSubmit(_ref2) {\n    var email = _ref2.email,\n        password = _ref2.password,\n        newPassword = _ref2.newPassword;\n\n    var user = _firebase2.default.auth().currentUser;\n\n    var credentials = _firebase.default.auth.EmailAuthProvider.credential(email, password);\n\n    user.reauthenticateWithCredential(credentials).then(function () {\n      console.log(\"REAUTH SUCCESS\");\n      user.updatePassword(newPassword).then(function () {\n        console.log(\"UPDATE PASSWORD SUCCESS\");\n      }).catch(function (error) {\n        console.log(error);\n      });\n      navigation.goBack();\n    }).catch(function (error) {\n      console.log(error);\n      setLoginFailed(true);\n    });\n  };\n\n  return _react.default.createElement(_Screen.default, {\n    style: styles.container,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_AppText.default, {\n    style: styles.textbox,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Enter current password.\"), _react.default.createElement(_forms.AppForm, {\n    initialValues: {\n      password: \"\",\n      email: authContext.user.email,\n      newPassword: \"\",\n      newPasswordConfirm: \"\"\n    },\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_ErrorMessage.default, {\n    error: \"Invalid password.\",\n    visible: loginFailed,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_forms.AppFormField, {\n    name: \"password\",\n    autoCaptilize: \"none\",\n    autoCorrect: false,\n    icon: \"lock\",\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    textContentType: \"password\",\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_AppText.default, {\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Enter your new password.\"), _react.default.createElement(_forms.AppFormField, {\n    name: \"newPassword\",\n    autoCaptilize: \"none\",\n    autoCorrect: false,\n    icon: \"lock\",\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    textContentType: \"password\",\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_AppText.default, {\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Re-enter your new password.\"), _react.default.createElement(_forms.AppFormField, {\n    name: \"confirmNewPassword\",\n    autoCaptilize: \"none\",\n    autoCorrect: false,\n    icon: \"lock-question\",\n    placeholder: \"Confirm Password\",\n    secureTextEntry: true,\n    textContentType: \"password\",\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_forms.SubmitButton, {\n    title: \"Change Password\",\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    padding: 10,\n    backgroundColor: _colors.default.white\n  },\n  tooltip: {\n    alignSelf: \"center\",\n    textTransform: \"capitalize\"\n  }\n});\n\nvar _default = EditAccountPassword;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Mason/ELTRFront/app/screens/EditAccountPassword.js"],"names":["validationSchema","Yup","object","shape","email","string","required","label","password","min","newPassword","confirmNewPassword","oneOf","ref","EditAccountPassword","navigation","authContext","AuthContext","loginFailed","setLoginFailed","handleSubmit","user","Firebase","auth","currentUser","credentials","firebase","EmailAuthProvider","credential","reauthenticateWithCredential","then","console","log","updatePassword","catch","error","goBack","styles","container","textbox","newPasswordConfirm","StyleSheet","create","padding","backgroundColor","colors","white","tooltip","alignSelf","textTransform"],"mappings":";;;;;;;;;AAAA;;;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,gBAAgB,GAAGC,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,EAAAA,KAAK,EAAEH,GAAG,CAACI,MAAJ,GAAaC,QAAb,GAAwBF,KAAxB,GAAgCG,KAAhC,CAAsC,OAAtC,CADmC;AAE1CC,EAAAA,QAAQ,EAAEP,GAAG,CAACI,MAAJ,GAAaC,QAAb,GAAwBG,GAAxB,CAA4B,CAA5B,EAA+BF,KAA/B,CAAqC,UAArC,CAFgC;AAG1CG,EAAAA,WAAW,EAAET,GAAG,CAACI,MAAJ,GAAaC,QAAb,GAAwBG,GAAxB,CAA4B,CAA5B,EAA+BF,KAA/B,CAAqC,UAArC,CAH6B;AAI1CI,EAAAA,kBAAkB,EAAEV,GAAG,CAACI,MAAJ,GACjBC,QADiB,GAEjBC,KAFiB,CAEX,kBAFW,EAGjBK,KAHiB,CAGX,CAACX,GAAG,CAACY,GAAJ,CAAQ,aAAR,CAAD,EAAyB,IAAzB,CAHW,EAGqB,uBAHrB;AAJsB,CAAnB,CAAzB;;AAUA,SAASC,mBAAT,OAA6C;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAC3C,MAAMC,WAAW,GAAG,uBAAWC,gBAAX,CAApB;;AAD2C,kBAEL,qBAAS,KAAT,CAFK;AAAA;AAAA,MAEpCC,WAFoC;AAAA,MAEvBC,cAFuB;;AAI3C,MAAMC,YAAY,GAAG,SAAfA,YAAe,QAAsC;AAAA,QAAnChB,KAAmC,SAAnCA,KAAmC;AAAA,QAA5BI,QAA4B,SAA5BA,QAA4B;AAAA,QAAlBE,WAAkB,SAAlBA,WAAkB;;AACzD,QAAIW,IAAI,GAAGC,mBAASC,IAAT,GAAgBC,WAA3B;;AACA,QAAIC,WAAW,GAAGC,kBAASH,IAAT,CAAcI,iBAAd,CAAgCC,UAAhC,CAChBxB,KADgB,EAEhBI,QAFgB,CAAlB;;AAMAa,IAAAA,IAAI,CACDQ,4BADH,CACgCJ,WADhC,EAEGK,IAFH,CAEQ,YAAY;AAEhBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAX,MAAAA,IAAI,CACDY,cADH,CACkBvB,WADlB,EAEGoB,IAFH,CAEQ,YAAY;AAEhBC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,OALH,EAMGE,KANH,CAMS,UAAUC,KAAV,EAAiB;AAEtBJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,OATH;AAUApB,MAAAA,UAAU,CAACqB,MAAX;AACD,KAhBH,EAiBGF,KAjBH,CAiBS,UAAUC,KAAV,EAAiB;AAEtBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAhB,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KArBH;AAsBD,GA9BD;;AAgCA,SACE,6BAAC,eAAD;AAAQ,IAAA,KAAK,EAAEkB,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,gBAAD;AAAS,IAAA,KAAK,EAAED,MAAM,CAACE,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAGE,6BAAC,cAAD;AACE,IAAA,aAAa,EAAE;AACb/B,MAAAA,QAAQ,EAAE,EADG;AAEbJ,MAAAA,KAAK,EAAEY,WAAW,CAACK,IAAZ,CAAiBjB,KAFX;AAGbM,MAAAA,WAAW,EAAE,EAHA;AAIb8B,MAAAA,kBAAkB,EAAE;AAJP,KADjB;AAOE,IAAA,QAAQ,EAAEpB,YAPZ;AAQE,IAAA,gBAAgB,EAAEpB,gBARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,6BAAC,qBAAD;AAAc,IAAA,KAAK,EAAC,mBAApB;AAAwC,IAAA,OAAO,EAAEkB,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE,6BAAC,mBAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,WAAW,EAAE,KAHf;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,WAAW,EAAC,UALd;AAME,IAAA,eAAe,MANjB;AAOE,IAAA,eAAe,EAAC,UAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAoBE,6BAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCApBF,EAqBE,6BAAC,mBAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,WAAW,EAAE,KAHf;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,WAAW,EAAC,UALd;AAME,IAAA,eAAe,MANjB;AAOE,IAAA,eAAe,EAAC,UAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,EA8BE,6BAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCA9BF,EA+BE,6BAAC,mBAAD;AACE,IAAA,IAAI,EAAC,oBADP;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,WAAW,EAAE,KAHf;AAIE,IAAA,IAAI,EAAC,eAJP;AAKE,IAAA,WAAW,EAAC,kBALd;AAME,IAAA,eAAe,MANjB;AAOE,IAAA,eAAe,EAAC,UAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF,EAwCE,6BAAC,mBAAD;AAAc,IAAA,KAAK,EAAC,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxCF,CAHF,CADF;AAgDD;;AAED,IAAMmB,MAAM,GAAGI,oBAAWC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,OAAO,EAAE,EADA;AAETC,IAAAA,eAAe,EAAEC,gBAAOC;AAFf,GADoB;AAK/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE,QADJ;AAEPC,IAAAA,aAAa,EAAE;AAFR;AALsB,CAAlB,CAAf;;eAWenC,mB","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport * as Yup from \"yup\";\r\nimport firebase from \"firebase\";\r\n\r\nimport Screen from \"../components/Screen\";\r\nimport { AppForm, AppFormField, SubmitButton } from \"../components/forms\";\r\nimport AppText from \"../components/AppText\";\r\nimport AuthContext from \"../auth/context\";\r\nimport Firebase from \"../config/firebase\";\r\nimport ErrorMessage from \"../components/forms/ErrorMessage\";\r\nimport colors from \"../config/colors\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().required().email().label(\"Email\"),\r\n  password: Yup.string().required().min(6).label(\"Password\"),\r\n  newPassword: Yup.string().required().min(6).label(\"Password\"),\r\n  confirmNewPassword: Yup.string()\r\n    .required()\r\n    .label(\"Confirm Password\")\r\n    .oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match.\"),\r\n});\r\n\r\nfunction EditAccountPassword({ navigation }) {\r\n  const authContext = useContext(AuthContext);\r\n  const [loginFailed, setLoginFailed] = useState(false);\r\n\r\n  const handleSubmit = ({ email, password, newPassword }) => {\r\n    let user = Firebase.auth().currentUser;\r\n    let credentials = firebase.auth.EmailAuthProvider.credential(\r\n      email,\r\n      password\r\n    );\r\n    // Prompt the user to re-provide their sign-in credentials\r\n\r\n    user\r\n      .reauthenticateWithCredential(credentials)\r\n      .then(function () {\r\n        // User re-authenticated.\r\n        console.log(\"REAUTH SUCCESS\");\r\n        user\r\n          .updatePassword(newPassword)\r\n          .then(function () {\r\n            // Update successful.\r\n            console.log(\"UPDATE PASSWORD SUCCESS\");\r\n          })\r\n          .catch(function (error) {\r\n            // An error happened.\r\n            console.log(error);\r\n          });\r\n        navigation.goBack();\r\n      })\r\n      .catch(function (error) {\r\n        // An error happened.\r\n        console.log(error);\r\n        setLoginFailed(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Screen style={styles.container}>\r\n      <AppText style={styles.textbox}>Enter current password.</AppText>\r\n\r\n      <AppForm\r\n        initialValues={{\r\n          password: \"\",\r\n          email: authContext.user.email,\r\n          newPassword: \"\",\r\n          newPasswordConfirm: \"\",\r\n        }}\r\n        onSubmit={handleSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        <ErrorMessage error=\"Invalid password.\" visible={loginFailed} />\r\n        <AppFormField\r\n          name=\"password\"\r\n          autoCaptilize=\"none\"\r\n          autoCorrect={false}\r\n          icon=\"lock\"\r\n          placeholder=\"Password\"\r\n          secureTextEntry\r\n          textContentType=\"password\"\r\n        />\r\n        <AppText>Enter your new password.</AppText>\r\n        <AppFormField\r\n          name=\"newPassword\"\r\n          autoCaptilize=\"none\"\r\n          autoCorrect={false}\r\n          icon=\"lock\"\r\n          placeholder=\"Password\"\r\n          secureTextEntry\r\n          textContentType=\"password\"\r\n        />\r\n        <AppText>Re-enter your new password.</AppText>\r\n        <AppFormField\r\n          name=\"confirmNewPassword\"\r\n          autoCaptilize=\"none\"\r\n          autoCorrect={false}\r\n          icon=\"lock-question\"\r\n          placeholder=\"Confirm Password\"\r\n          secureTextEntry\r\n          textContentType=\"password\"\r\n        />\r\n        <SubmitButton title=\"Change Password\" />\r\n      </AppForm>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 10,\r\n    backgroundColor: colors.white,\r\n  },\r\n  tooltip: {\r\n    alignSelf: \"center\",\r\n    textTransform: \"capitalize\",\r\n  },\r\n});\r\n\r\nexport default EditAccountPassword;\r\n"]},"metadata":{},"sourceType":"script"}