{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _TouchableWithoutFeedback = _interopRequireDefault(require(\"react-native-web/dist/exports/TouchableWithoutFeedback\"));\n\nvar _Modal = _interopRequireDefault(require(\"react-native-web/dist/exports/Modal\"));\n\nvar _Button = _interopRequireDefault(require(\"react-native-web/dist/exports/Button\"));\n\nvar _FlatList = _interopRequireDefault(require(\"react-native-web/dist/exports/FlatList\"));\n\nvar _vectorIcons = require(\"@expo/vector-icons\");\n\nvar _styles = _interopRequireDefault(require(\"../config/styles\"));\n\nvar _AppText = _interopRequireDefault(require(\"./AppText\"));\n\nvar _Screen = _interopRequireDefault(require(\"../components/Screen\"));\n\nvar _PickerItem = _interopRequireDefault(require(\"./PickerItem\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mason\\\\ELTRFront\\\\app\\\\components\\\\AppPicker.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction AppPicker(_ref) {\n  var _this = this;\n\n  var icon = _ref.icon,\n      placeholder = _ref.placeholder,\n      items = _ref.items,\n      _ref$numColumns = _ref.numColumns,\n      numColumns = _ref$numColumns === void 0 ? 1 : _ref$numColumns,\n      onSelectItem = _ref.onSelectItem,\n      modalStyle = _ref.modalStyle,\n      _ref$PickerItemCompon = _ref.PickerItemComponent,\n      PickerItemComponent = _ref$PickerItemCompon === void 0 ? _PickerItem.default : _ref$PickerItemCompon,\n      selectedItem = _ref.selectedItem,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? \"100%\" : _ref$width;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_TouchableWithoutFeedback.default, {\n    onPress: function onPress() {\n      return setModalVisible(true);\n    },\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_View.default, {\n    style: [styles.container, {\n      width: width\n    }],\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, icon && _react.default.createElement(_vectorIcons.MaterialCommunityIcons, {\n    name: icon,\n    size: 20,\n    color: _styles.default.colors.medium,\n    style: styles.icon,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), selectedItem ? _react.default.createElement(_AppText.default, {\n    style: styles.text,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, selectedItem.label) : _react.default.createElement(_AppText.default, {\n    style: styles.placeholder,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, placeholder), _react.default.createElement(_vectorIcons.MaterialCommunityIcons, {\n    name: \"plus-circle\",\n    size: 20,\n    color: _styles.default.colors.eltrgreen,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }))), _react.default.createElement(_Modal.default, {\n    visible: modalVisible,\n    animationType: \"slide\",\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_Screen.default, {\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_Button.default, {\n    title: \"Close\",\n    onPress: function onPress() {\n      return setModalVisible(false);\n    },\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_FlatList.default, {\n    columnWrapperStyle: modalStyle,\n    numColumns: numColumns,\n    data: items,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return _react.default.createElement(PickerItemComponent, {\n        item: item,\n        onPress: function onPress() {\n          setModalVisible(false);\n          onSelectItem(item);\n        },\n        __self: _this,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      });\n    },\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    flexDirection: \"row\",\n    padding: 15,\n    marginVertical: 10,\n    alignItems: \"center\"\n  },\n  icon: {\n    marginRight: 10\n  },\n  text: {\n    flex: 1,\n    color: _styles.default.colors.dark\n  },\n  placeholder: {\n    flex: 1,\n    color: _styles.default.colors.medium\n  }\n});\n\nvar _default = AppPicker;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Mason/ELTRFront/app/components/AppPicker.js"],"names":["AppPicker","icon","placeholder","items","numColumns","onSelectItem","modalStyle","PickerItemComponent","PickerItem","selectedItem","width","modalVisible","setModalVisible","styles","container","defaultStyles","colors","medium","text","label","eltrgreen","item","id","toString","StyleSheet","create","flexDirection","padding","marginVertical","alignItems","marginRight","flex","color","dark"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TouchableWithoutFeedback,\r\n  Modal,\r\n  Button,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\nimport defaultStyles from \"../config/styles\";\r\nimport AppText from \"./AppText\";\r\nimport Screen from \"../components/Screen\";\r\nimport PickerItem from \"./PickerItem\";\r\n\r\nfunction AppPicker({\r\n  icon,\r\n  placeholder,\r\n  items,\r\n  numColumns = 1,\r\n  onSelectItem,\r\n  modalStyle,\r\n  PickerItemComponent = PickerItem,\r\n  selectedItem,\r\n  width = \"100%\",\r\n}) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <TouchableWithoutFeedback onPress={() => setModalVisible(true)}>\r\n        <View style={[styles.container, { width }]}>\r\n          {icon && (\r\n            <MaterialCommunityIcons\r\n              name={icon}\r\n              size={20}\r\n              color={defaultStyles.colors.medium}\r\n              style={styles.icon}\r\n            />\r\n          )}\r\n\r\n          {selectedItem ? (\r\n            <AppText style={styles.text}>{selectedItem.label}</AppText>\r\n          ) : (\r\n            <AppText style={styles.placeholder}>{placeholder}</AppText>\r\n          )}\r\n          <MaterialCommunityIcons\r\n            name=\"plus-circle\"\r\n            size={20}\r\n            color={defaultStyles.colors.eltrgreen}\r\n          />\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n      <Modal visible={modalVisible} animationType=\"slide\">\r\n        <Screen>\r\n          <Button title=\"Close\" onPress={() => setModalVisible(false)} />\r\n          <FlatList\r\n            columnWrapperStyle={modalStyle}\r\n            numColumns={numColumns}\r\n            data={items}\r\n            keyExtractor={(item) => item.id.toString()}\r\n            renderItem={({ item }) => (\r\n              <PickerItemComponent\r\n                item={item}\r\n                onPress={() => {\r\n                  setModalVisible(false);\r\n                  onSelectItem(item);\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n        </Screen>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"row\",\r\n    padding: 15,\r\n    marginVertical: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  icon: {\r\n    marginRight: 10,\r\n  },\r\n  text: {\r\n    flex: 1,\r\n    color: defaultStyles.colors.dark,\r\n  },\r\n  placeholder: {\r\n    flex: 1,\r\n    color: defaultStyles.colors.medium,\r\n  },\r\n});\r\nexport default AppPicker;\r\n"]},"metadata":{},"sourceType":"script"}