{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _Image = _interopRequireDefault(require(\"react-native-web/dist/exports/Image\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar Yup = _interopRequireWildcard(require(\"yup\"));\n\nvar _context = _interopRequireDefault(require(\"../auth/context\"));\n\nvar _forms = require(\"../components/forms\");\n\nvar _Screen = _interopRequireDefault(require(\"../components/Screen\"));\n\nvar _colors = _interopRequireDefault(require(\"../config/colors\"));\n\nvar _firebase = _interopRequireDefault(require(\"../config/firebase\"));\n\nvar _routes = _interopRequireDefault(require(\"../navigation/routes\"));\n\nvar _AppButton = _interopRequireDefault(require(\"../components/AppButton\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mason\\\\ELTRFront\\\\app\\\\screens\\\\RegisterScreen.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar validationSchema = Yup.object().shape({\n  name: Yup.string().required().label(\"Name\"),\n  email: Yup.string().required().email().label(\"Email\"),\n  password: Yup.string().required().min(6).label(\"Password\"),\n  confirmPassword: Yup.string().required().label(\"Confirm Password\").oneOf([Yup.ref(\"password\"), null], \"Passwords must match.\")\n});\n\nfunction RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var authContext = (0, _react.useContext)(_context.default);\n  var userID = null;\n\n  var handleSubmit = function handleSubmit(_ref2) {\n    var name = _ref2.name,\n        email = _ref2.email,\n        password = _ref2.password;\n\n    _firebase.default.auth().createUserWithEmailAndPassword(email, password).then(function (userCredential) {\n      userID = userCredential.user.uid;\n      authContext.setUser(userCredential.user);\n\n      _firebase.default.firestore().collection(\"users\").doc(\"\" + userID).set({\n        name: name\n      }).then(function () {\n        authContext.setUsername(name);\n      }).catch(function (error) {\n        console.error(\"Error writing document: \", error);\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return _react.default.createElement(_Screen.default, {\n    style: styles.container,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_Image.default, {\n    style: styles.logo,\n    source: require(\"../assets/eltrRainbow.png\"),\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_forms.AppForm, {\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_forms.AppFormField, {\n    name: \"name\",\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    icon: \"account\",\n    placeholder: \"Name\",\n    textContentType: \"name\",\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_forms.AppFormField, {\n    name: \"email\",\n    autoCaptilize: \"none\",\n    autoCorrect: false,\n    keyboardType: \"email-address\",\n    icon: \"email\",\n    placeholder: \"Email\",\n    textContentType: \"emailAddress\",\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_forms.AppFormField, {\n    name: \"password\",\n    autoCaptilize: \"none\",\n    autoCorrect: false,\n    icon: \"lock\",\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    textContentType: \"password\",\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_forms.AppFormField, {\n    name: \"confirmPassword\",\n    autoCaptilize: \"none\",\n    autoCorrect: false,\n    icon: \"lock-question\",\n    placeholder: \"Confirm Password\",\n    secureTextEntry: true,\n    textContentType: \"password\",\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_forms.SubmitButton, {\n    title: \"Register\",\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_View.default, {\n    style: styles.buttonContainer,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }\n  }, _react.default.createElement(_AppButton.default, {\n    title: \"back\",\n    onPress: function onPress() {\n      return navigation.navigate(_routes.default.WELCOME);\n    },\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }\n  }))));\n}\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    padding: 10,\n    backgroundColor: _colors.default.secondary\n  },\n  logo: {\n    alignSelf: \"center\",\n    marginTop: 50,\n    marginBottom: 20\n  }\n});\n\nvar _default = RegisterScreen;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Mason/ELTRFront/app/screens/RegisterScreen.js"],"names":["validationSchema","Yup","object","shape","name","string","required","label","email","password","min","confirmPassword","oneOf","ref","RegisterScreen","navigation","authContext","AuthContext","userID","handleSubmit","Firebase","auth","createUserWithEmailAndPassword","then","userCredential","user","uid","setUser","firestore","collection","doc","set","setUsername","catch","error","console","log","styles","container","logo","require","buttonContainer","navigate","routes","WELCOME","StyleSheet","create","padding","backgroundColor","colors","secondary","alignSelf","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { StyleSheet, Image, View } from \"react-native\";\r\nimport * as Yup from \"yup\";\r\nimport AuthContext from \"../auth/context\";\r\n\r\nimport { AppForm, AppFormField, SubmitButton } from \"../components/forms\";\r\nimport Screen from \"../components/Screen\";\r\nimport colors from \"../config/colors\";\r\nimport Firebase from \"../config/firebase\";\r\nimport routes from \"../navigation/routes\";\r\nimport AppButton from \"../components/AppButton\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required().label(\"Name\"),\r\n  email: Yup.string().required().email().label(\"Email\"),\r\n  password: Yup.string().required().min(6).label(\"Password\"),\r\n  confirmPassword: Yup.string()\r\n    .required()\r\n    .label(\"Confirm Password\")\r\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match.\"),\r\n});\r\n\r\nfunction RegisterScreen({ navigation }) {\r\n  const authContext = useContext(AuthContext);\r\n  let userID = null;\r\n\r\n  const handleSubmit = ({ name, email, password }) => {\r\n    Firebase.auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((userCredential) => {\r\n        // Signed in\r\n        userID = userCredential.user.uid;\r\n        authContext.setUser(userCredential.user);\r\n\r\n        Firebase.firestore()\r\n          .collection(\"users\")\r\n          .doc(`${userID}`)\r\n          .set({\r\n            name: name,\r\n          })\r\n          .then(() => {\r\n            authContext.setUsername(name);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n          });\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Screen style={styles.container}>\r\n      <Image\r\n        style={styles.logo}\r\n        source={require(\"../assets/eltrRainbow.png\")}\r\n      />\r\n      <AppForm\r\n        initialValues={{\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n        }}\r\n        onSubmit={handleSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        <AppFormField\r\n          name=\"name\"\r\n          autoCapitalize=\"words\"\r\n          autoCorrect={false}\r\n          icon=\"account\"\r\n          placeholder=\"Name\"\r\n          textContentType=\"name\"\r\n        />\r\n        <AppFormField\r\n          name=\"email\"\r\n          autoCaptilize=\"none\"\r\n          autoCorrect={false}\r\n          keyboardType=\"email-address\"\r\n          icon=\"email\"\r\n          placeholder=\"Email\"\r\n          textContentType=\"emailAddress\"\r\n        />\r\n        <AppFormField\r\n          name=\"password\"\r\n          autoCaptilize=\"none\"\r\n          autoCorrect={false}\r\n          icon=\"lock\"\r\n          placeholder=\"Password\"\r\n          secureTextEntry\r\n          textContentType=\"password\"\r\n        />\r\n        <AppFormField\r\n          name=\"confirmPassword\"\r\n          autoCaptilize=\"none\"\r\n          autoCorrect={false}\r\n          icon=\"lock-question\"\r\n          placeholder=\"Confirm Password\"\r\n          secureTextEntry\r\n          textContentType=\"password\"\r\n        />\r\n        <SubmitButton title=\"Register\" />\r\n\t\t<View style={styles.buttonContainer}>\r\n\t\t\t<AppButton\r\n\t\t\ttitle=\"back\"\r\n\t\t\tonPress={() => navigation.navigate(routes.WELCOME)}\r\n\t\t\t/>\r\n\t\t</View>\r\n      </AppForm>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 10,\r\n    backgroundColor: colors.secondary,\r\n  },\r\n  logo: {\r\n    alignSelf: \"center\",\r\n    marginTop: 50,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nexport default RegisterScreen;\r\n"]},"metadata":{},"sourceType":"script"}