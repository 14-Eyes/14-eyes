{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _Platform = _interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _TouchableOpacity = _interopRequireDefault(require(\"react-native-web/dist/exports/TouchableOpacity\"));\n\nvar _colors = _interopRequireDefault(require(\"../config/colors\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mason\\\\ELTRFront\\\\app\\\\components\\\\ChildButtonSmall.js\";\n\nfunction ChildButtonSmall(_ref) {\n  var title = _ref.title,\n      onPress = _ref.onPress,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \"eltrlightpink\" : _ref$color;\n  return _react.default.createElement(_TouchableOpacity.default, {\n    onPress: onPress,\n    style: [styles.button, {\n      backgroundColor: _colors.default[color]\n    }],\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_Text.default, {\n    style: styles.buttonText,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, title));\n}\n\nvar styles = _StyleSheet.default.create({\n  button: {\n    borderWidth: 0.5,\n    borderColor: _colors.default.medium,\n    borderRadius: 50,\n    shadowColor: _colors.default.white,\n    shadowOpacity: 0.5,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    alignItems: \"center\",\n    width: 140,\n    height: 180,\n    justifyContent: \"center\"\n  },\n  buttonText: {\n    fontSize: 24,\n    color: _colors.default.dark,\n    fontFamily: _Platform.default.OS === \"android\" ? \"Roboto\" : \"Avenir\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  }\n});\n\nvar _default = ChildButtonSmall;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Mason/ELTRFront/app/components/ChildButtonSmall.js"],"names":["ChildButtonSmall","title","onPress","color","styles","button","backgroundColor","colors","buttonText","StyleSheet","create","borderWidth","borderColor","medium","borderRadius","shadowColor","white","shadowOpacity","shadowOffset","width","height","shadowRadius","alignItems","justifyContent","fontSize","dark","fontFamily","Platform","OS","fontWeight","textAlign"],"mappings":";;;;;;;AAAA;;;;;;;;;;AAGA;;;;AAEA,SAASA,gBAAT,OAAuE;AAAA,MAA3CC,KAA2C,QAA3CA,KAA2C;AAAA,MAApCC,OAAoC,QAApCA,OAAoC;AAAA,wBAA3BC,KAA2B;AAAA,MAA3BA,KAA2B,2BAAnB,eAAmB;AACrE,SACE,6BAAC,yBAAD;AACE,IAAA,OAAO,EAAED,OADX;AAEE,IAAA,KAAK,EAAE,CAACE,MAAM,CAACC,MAAR,EAAgB;AAAEC,MAAAA,eAAe,EAAEC,gBAAOJ,KAAP;AAAnB,KAAhB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,6BAAC,aAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACI,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCP,KAAjC,CAJF,CADF;AAQD;;AAED,IAAMG,MAAM,GAAGK,oBAAWC,MAAX,CAAkB;AAC/BL,EAAAA,MAAM,EAAE;AACNM,IAAAA,WAAW,EAAE,GADP;AAENC,IAAAA,WAAW,EAAEL,gBAAOM,MAFd;AAGNC,IAAAA,YAAY,EAAE,EAHR;AAINC,IAAAA,WAAW,EAAER,gBAAOS,KAJd;AAKNC,IAAAA,aAAa,EAAE,GALT;AAMNC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,MAAM,EAAE;AAFI,KANR;AAUJC,IAAAA,YAAY,EAAE,CAVV;AAWJC,IAAAA,UAAU,EAAE,QAXR;AAYJH,IAAAA,KAAK,EAAE,GAZH;AAaJC,IAAAA,MAAM,EAAE,GAbJ;AAcJG,IAAAA,cAAc,EAAC;AAdX,GADuB;AAoB/Bf,EAAAA,UAAU,EAAE;AACVgB,IAAAA,QAAQ,EAAE,EADA;AAEVrB,IAAAA,KAAK,EAAEI,gBAAOkB,IAFJ;AAGVC,IAAAA,UAAU,EAAEC,kBAASC,EAAT,KAAgB,SAAhB,GAA4B,QAA5B,GAAuC,QAHzC;AAIVC,IAAAA,UAAU,EAAE,MAJF;AAKVC,IAAAA,SAAS,EAAC;AALA;AApBmB,CAAlB,CAAf;;eA6Be9B,gB","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Platform, Text, TouchableOpacity } from \"react-native\";\r\n\r\nimport colors from \"../config/colors\";\r\n\r\nfunction ChildButtonSmall({ title, onPress, color = \"eltrlightpink\" }) {\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={onPress}\r\n      style={[styles.button, { backgroundColor: colors[color] }]}\r\n    >\r\n      <Text style={styles.buttonText}>{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    borderWidth: 0.5,\r\n    borderColor: colors.medium,\r\n    borderRadius: 50,\r\n    shadowColor: colors.white,\r\n    shadowOpacity: 0.5,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n      shadowRadius: 4,\r\n      alignItems: \"center\", \r\n      width: 140,\r\n      height: 180,\r\n      justifyContent:\"center\",\r\n      //padding: 25,\r\n      //marginVertical: 10,\r\n  },\r\n\r\n  buttonText: {\r\n    fontSize: 24,\r\n    color: colors.dark,\r\n    fontFamily: Platform.OS === \"android\" ? \"Roboto\" : \"Avenir\",\r\n    fontWeight: \"bold\",\r\n    textAlign:\"center\",\r\n  },\r\n});\r\n\r\nexport default ChildButtonSmall;\r\n"]},"metadata":{},"sourceType":"script"}